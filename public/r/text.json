{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "text",
  "type": "registry:ui",
  "dependencies": [
    "class-variance-authority"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/components/star-forge/text.tsx",
      "content": "import { HTMLAttributes, forwardRef } from 'react';\r\n\r\nimport { cx } from 'class-variance-authority';\r\n\r\ninterface LinkProps extends HTMLAttributes<HTMLAnchorElement> {\r\n  href: string;\r\n  className?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const Text = {\r\n  Header: forwardRef<HTMLHeadingElement, HTMLAttributes<HTMLHeadingElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <h1\r\n        ref={ref}\r\n        className={cx(\r\n          'mb-3 gap-6 text-4xl font-extralight lg:mb-4 lg:gap-8',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </h1>\r\n    )\r\n  ),\r\n  H1: forwardRef<HTMLHeadingElement, HTMLAttributes<HTMLHeadingElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <h1\r\n        ref={ref}\r\n        className={cx('text-3xl font-extralight lg:mb-2', className)}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </h1>\r\n    )\r\n  ),\r\n  H2: forwardRef<HTMLHeadingElement, HTMLAttributes<HTMLHeadingElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <h2\r\n        ref={ref}\r\n        className={cx('text-2xl font-extralight lg:mb-2', className)}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </h2>\r\n    )\r\n  ),\r\n  H3: forwardRef<HTMLHeadingElement, HTMLAttributes<HTMLHeadingElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <h3\r\n        ref={ref}\r\n        className={cx('text-xl font-extralight lg:mb-2', className)}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </h3>\r\n    )\r\n  ),\r\n  H4: forwardRef<HTMLHeadingElement, HTMLAttributes<HTMLHeadingElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <h4\r\n        ref={ref}\r\n        className={cx(\r\n          'mb-2 text-lg font-extralight lg:mb-3 lg:text-xl',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </h4>\r\n    )\r\n  ),\r\n  H5: forwardRef<HTMLHeadingElement, HTMLAttributes<HTMLHeadingElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <h5\r\n        ref={ref}\r\n        className={cx(\r\n          'mb-2 text-base font-extralight lg:mb-3 lg:text-lg',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </h5>\r\n    )\r\n  ),\r\n  H6: forwardRef<HTMLHeadingElement, HTMLAttributes<HTMLHeadingElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <h6\r\n        ref={ref}\r\n        className={cx(\r\n          'mb-2 text-sm font-extralight lg:mb-3 lg:text-base',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </h6>\r\n    )\r\n  ),\r\n  P: forwardRef<HTMLParagraphElement, HTMLAttributes<HTMLParagraphElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <p\r\n        ref={ref}\r\n        className={cx('mb-2 text-sm font-extralight lg:mb-4', className)}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </p>\r\n    )\r\n  ),\r\n  Span: forwardRef<HTMLSpanElement, HTMLAttributes<HTMLSpanElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <span\r\n        ref={ref}\r\n        className={cx(\r\n          'text-foreground mb-2 text-base font-extralight lg:mb-3',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </span>\r\n    )\r\n  ),\r\n  Small: forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <small\r\n        ref={ref}\r\n        className={cx(\r\n          'text-muted-foreground mb-2 text-sm font-extralight lg:mb-3',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </small>\r\n    )\r\n  ),\r\n  Strong: forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <strong\r\n        ref={ref}\r\n        className={cx(\r\n          'text-foreground mb-2 text-base font-semibold lg:mb-3',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </strong>\r\n    )\r\n  ),\r\n  Em: forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <em\r\n        ref={ref}\r\n        className={cx(\r\n          'text-foreground mb-2 text-base font-extralight italic lg:mb-3',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </em>\r\n    )\r\n  ),\r\n  Blockquote: forwardRef<HTMLQuoteElement, HTMLAttributes<HTMLQuoteElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <blockquote\r\n        ref={ref}\r\n        className={cx(\r\n          'border-primary text-foreground mb-2 border-l-4 pl-4 text-base font-extralight italic lg:mb-3',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </blockquote>\r\n    )\r\n  ),\r\n  Cite: forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <cite\r\n        ref={ref}\r\n        className={cx(\r\n          'text-muted-foreground mb-2 text-sm font-extralight lg:mb-3',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </cite>\r\n    )\r\n  ),\r\n  Q: forwardRef<HTMLQuoteElement, HTMLAttributes<HTMLQuoteElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <q\r\n        ref={ref}\r\n        className={cx(\r\n          'text-foreground mb-2 text-base font-extralight italic lg:mb-3',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </q>\r\n    )\r\n  ),\r\n  Abbr: forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <abbr\r\n        ref={ref}\r\n        className={cx(\r\n          'underline-dotted text-foreground mb-2 cursor-help text-base font-extralight lg:mb-3',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </abbr>\r\n    )\r\n  ),\r\n  Del: forwardRef<HTMLModElement, HTMLAttributes<HTMLModElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <del\r\n        ref={ref}\r\n        className={cx(\r\n          'text-muted-foreground mb-2 text-base font-extralight line-through lg:mb-3',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </del>\r\n    )\r\n  ),\r\n  Ins: forwardRef<HTMLModElement, HTMLAttributes<HTMLModElement>>(\r\n    ({ children, className, ...props }, ref) => (\r\n      <ins\r\n        ref={ref}\r\n        className={cx(\r\n          'text-foreground mb-2 text-base font-extralight underline lg:mb-3',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </ins>\r\n    )\r\n  ),\r\n  Link: forwardRef<HTMLAnchorElement, LinkProps>(\r\n    ({ children, className, href, ...props }, ref) => (\r\n      <a\r\n        ref={ref}\r\n        href={href}\r\n        className={cx(\r\n          'text-primary font-extralight hover:underline lg:mb-8',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </a>\r\n    )\r\n  )\r\n};\r\n\r\nText.Header.displayName = 'Text.Header';\r\nText.H1.displayName = 'Text.H1';\r\nText.H2.displayName = 'Text.H2';\r\nText.H4.displayName = 'Text.H4';\r\nText.H5.displayName = 'Text.H5';\r\nText.H6.displayName = 'Text.H6';\r\nText.H3.displayName = 'Text.H3';\r\nText.Span.displayName = 'Text.Span';\r\nText.Small.displayName = 'Text.Small';\r\nText.Strong.displayName = 'Text.Strong';\r\nText.Blockquote.displayName = 'Text.Blockquote';\r\nText.Cite.displayName = 'Text.Cite';\r\nText.Q.displayName = 'Text.Q';\r\nText.P.displayName = 'Text.P';\r\nText.Em.displayName = 'Text.Em';\r\nText.Abbr.displayName = 'Text.Abbr';\r\nText.Del.displayName = 'Text.Del';\r\nText.Link.displayName = 'Text.Link';\r\nText.Ins.displayName = 'Text.Ins';\r\n",
      "type": "registry:ui"
    }
  ]
}